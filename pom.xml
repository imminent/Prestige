<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<groupId>com.imminentmeals</groupId>
	<artifactId>prestige-parent</artifactId>
	<version>0.6-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Prestige (Parent)</name>
	<description>MVC pattern for Android.</description>
	<url>http://github.com/imminent/prestige</url>
	<inceptionYear>2013</inceptionYear>

	<modules>
		<module>prestige</module>
		<module>prestige-example</module>
	</modules>

	<properties>
		<!-- Android Dependencies -->
		<java.version>1.6</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<android.version>4.1.1.4</android.version>
		<android.version_code>16</android.version_code>

		<!-- Enhancements -->
		<otto.version>1.3.4</otto.version>
		<dagger.version>1.1.0</dagger.version>
		<butterknife.version>2.0.1</butterknife.version>
		<guava.version>14.0.1</guava.version>
		<java-writer.version>2.1.2</java-writer.version>
		<findbugs.version>2.0.1</findbugs.version>

		<!-- Testing -->
		<junit.version>4.10</junit.version>
		<fest.version>2.0M10</fest.version>
		<fest.android.version>1.0.3</fest.android.version>
		<robolectric.version>2.1.1</robolectric.version>

		<!-- Plugins -->
		<maven-compiler-plugin.version>3.0</maven-compiler-plugin.version>
		<maven-release-plugin.version>2.4</maven-release-plugin.version>
		<android-maven-plugin.version>3.6.0</android-maven-plugin.version>
		<maven-checkstyle-plugin.version>2.9.1</maven-checkstyle-plugin.version>
		<findbugs-maven-plugin.version>2.5.2</findbugs-maven-plugin.version>
		<maven-pmd-plugin.version>2.7.1</maven-pmd-plugin.version>
		<lint-maven-plugin.version>0.0.6</lint-maven-plugin.version>
		<maven-invoker-plugin.version>1.7</maven-invoker-plugin.version>
		<eclipse-lifecycle-plugin.version>1.0.0</eclipse-lifecycle-plugin.version>
		<proguard-maven-plugin.version>2.0.6</proguard-maven-plugin.version>
		
		<!-- Proguard -->
		<java.bootstrap.classes>${java.home}/lib/rt.jar</java.bootstrap.classes>
		<proguard.version>4.9</proguard.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Android -->
			<dependency>
				<groupId>com.google.android</groupId>
				<artifactId>android</artifactId>
				<version>${android.version}</version>
			</dependency>
			<!-- Guava: Java utilites -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<!-- Butter Knife: View "injection" -->
			<dependency>
				<groupId>com.jakewharton</groupId>
				<artifactId>butterknife</artifactId>
				<version>${butterknife.version}</version>
			</dependency>
			<!-- Dagger: Compile-time Java dependency injection -->
			<dependency>
				<groupId>com.squareup.dagger</groupId>
				<artifactId>dagger</artifactId>
				<version>${dagger.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.dagger</groupId>
				<artifactId>dagger-compiler</artifactId>
				<version>${dagger.version}</version>
				<optional>true</optional>
			</dependency>
			<!-- Otto: EventBus for Android -->
			<dependency>
				<groupId>com.squareup</groupId>
				<artifactId>otto</artifactId>
				<version>${otto.version}</version>
			</dependency>
			<!-- JavaWriter: Java source code generation utilities -->
			<dependency>
			  <groupId>com.squareup</groupId>
			  <artifactId>javawriter</artifactId>
			  <version>${java-writer.version}</version>
			</dependency>
			<!-- JUnit: Unit Testing -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<!-- Fest: JUnit assertions -->
			<dependency>
				<groupId>org.easytesting</groupId>
				<artifactId>fest-assert-core</artifactId>
				<version>${fest.version}</version>
			</dependency>
			<!-- Fest-Android: Android specific Fest assertions -->
			<dependency>
				<groupId>com.squareup</groupId>
				<artifactId>fest-android</artifactId>
				<version>${fest.android.version}</version>
			</dependency>
			<!-- Robolectric: Android JUnit testing framework -->
			<dependency>
				<groupId>org.robolectric</groupId>
				<artifactId>robolectric</artifactId>
				<version>${robolectric.version}</version>
			</dependency>
			<!-- FindBugs: Static analysis tools annotations -->
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>${findbugs.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
				<configuration>
					<failsOnError>true</failsOnError>
					<configLocation>checkstyle.xml</configLocation>
					<consoleOutput>true</consoleOutput>
				</configuration>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>checkstyle</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${findbugs-maven-plugin.version}</version>
				<configuration>
					<excludeFilterFile>findbugs-filter.xml</excludeFilterFile>
					<includeFilterFile>findbugs-include.xml</includeFilterFile>
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>findbugs-check</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-plugin.version}</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.jayway.maven.plugins.android.generation2</groupId>
					<artifactId>android-maven-plugin</artifactId>
					<version>${android-maven-plugin.version}</version>
					<configuration>
						<sdk>
							<platform>${android.version_code}</platform>
						</sdk>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-invoker-plugin</artifactId>
					<version>${maven-invoker-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>com.lewisd</groupId>
					<artifactId>lint-maven-plugin</artifactId>
					<version>${lint-maven-plugin.version}</version>
					<executions>
						<execution>
							<phase>validate</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
				<plugin>
	                <groupId>com.github.wvengen</groupId>
	                <artifactId>proguard-maven-plugin</artifactId>
	                <version>${proguard-maven-plugin.version}</version>
	                <dependencies>
				       <dependency>
				           <groupId>net.sf.proguard</groupId>
				           <artifactId>proguard-base</artifactId>
				           <version>${proguard.version}</version>
				           <scope>runtime</scope>
				       </dependency>
				    </dependencies>
	                <executions>
	                   <execution>
	                       <phase>package</phase>
	                       <goals><goal>proguard</goal></goals>
	                   </execution>
	                </executions>
	                <configuration>
	                    <skip>true</skip>
	                    <proguardInclude>${project.basedir}/proguard.cfg</proguardInclude>
	                    <libs>
	                        <lib>${java.bootstrap.classes}</lib>
	                    </libs>
	                </configuration>
	            </plugin>

				<!-- Eclipse config -->
				<!-- WORKAROUND: http://stackoverflow.com/questions/13040788/how-to-elimate-the-maven-enforcer-plugin-goal-enforce-is-ignored-by-m2e-wa -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${eclipse-lifecycle-plugin.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.lewisd</groupId>
										<artifactId>lint-maven-plugin</artifactId>
										<versionRange>[${lint-maven-plugin.version},)</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
	    <profile>
	      <id>mac</id>
	      <activation>
	        <os>
	          <family>mac</family>
	        </os>        
	      </activation>
	      <properties>
	        <!-- path for OS X -->
	        <java.bootstrap.classes>${java.home}/../Classes/classes.jar</java.bootstrap.classes>
	      </properties>
	    </profile>
	</profiles>
</project>